{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","photoURL","profilePic","setProfilePic","history","useHistory","onSubmit","event","a","preventDefault","profileURL","updateProfile","photoURLRef","ref","child","uid","putString","response","getDownloadURL","className","src","width","height","alt","id","sonSubmit","onChange","value","target","type","placeholder","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","previous_value","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","attachmentURL","toggleEditing","prev","console","log","update","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","uuidv4","createdAt","Date","now","creatorId","collection","add","maxLength","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Navigation","to","heigh","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8dc726d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBT_VDI5MgdOvFrl3wX0OAv9zgw91-_yZw\",\n  authDomain: \"nwitter-3e0b7.firebaseapp.com\",\n  databaseURL: \"https://nwitter-3e0b7.firebaseio.com\",\n  projectId: \"nwitter-3e0b7\",\n  storageBucket: \"nwitter-3e0b7.appspot.com\",\n  messagingSenderId: \"162486109529\",\n  appId: \"1:162486109529:web:acc0f5d13fdfb64f62b848\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const [profilePic, setProfilePic] = useState(userObj.photoURL);\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut()\n        history.push(\"/\")\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewDisplayName(value);\n    }\n\n    const onFileChange = (event) => {\n        const { target: { files } } = event;\n        const theFile = files[0]\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget: { result } } = finishedEvent;\n            setProfilePic(result)\n        }\n        reader.readAsDataURL(theFile)\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let profileURL = \"\";\n        if (userObj.displayName !== newDisplayName\n            || userObj.photoURL !== profilePic) {\n            if (\n                userObj.displayName !== newDisplayName) {\n                await userObj.updateProfile({\n                    displayName: newDisplayName,\n                });\n            }\n            if (userObj.photoURL !== profilePic) {\n                const photoURLRef = storageService\n                    .ref()\n                    .child(`profile/${userObj.uid}`);\n                const response = await photoURLRef.putString(profilePic, 'data_url');\n                profileURL = await response.ref.getDownloadURL();\n                await userObj.updateProfile({\n                    photoURL: profileURL,\n                });\n            }\n            refreshUser();\n            // setProfilePic(userObj.photoURL);\n            // setNewDisplayName(userObj.displayName);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"profilebox\">\n                <h3>USER NAME</h3>\n                <h4>{userObj.displayName}</h4>\n                <h3>PROFILE PICTURE</h3>\n                <img src={userObj.photoURL} width=\"60px\" height=\"60px\" alt=\"\" ></img>\n            </div>\n            <div className=\"container\">\n            <form className=\"profileform\" id=\"profileform\" sonSubmit={onSubmit} >\n            {profilePic && <img src={profilePic} width=\"50px\" height=\"50px\" alt=\"\" />}\n                <input id=\"profilename\" onChange={onChange}\n                    type=\"text\" placeholder=\"New Profile Name\"\n                    value={newDisplayName} />\n                <input id=\"profilepicture\" type=\"file\" accept=\"/image*\" onChange={onFileChange} />\n                <input id=\"profilesubmit\" type=\"submit\" />\n            </form>\n            <button id=\"logout\" onClick={onLogOutClick}>Log Out</button>\n            </div>\n        </>)\n};\n\nexport default Profile;","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === 'email') {\n            setEmail(value)\n        } else if (name === 'password') {\n            setPassword(value)\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                //create account\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                )\n            } else {\n                // login\n                data = await authService.signInWithEmailAndPassword(\n                    email, password\n                )\n            }\n        } catch (error) {\n            setError(error.message)\n        }\n\n    };\n    const toggleAccount = () => {\n        setNewAccount((previous_value) => !previous_value)\n    }\n    return (\n        <>\n            <div className=\"authHeader\"><h2>NWITTER</h2></div>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\"\n                    type=\"email\" \n                    placeholder='Email' \n                    required value={email}\n                    onChange={onChange} \n                    />\n                <input \n                name=\"password\" \n                type=\"password\" \n                placeholder='Password'\n                    required \n                value={password} \n                onChange={onChange} />\n                <input \n                id=\"login\"\n                type=\"submit\" \n                value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error && <span>{error}</span>}\n            </form>            \n            <span id=\"togglelogin\" onClick={toggleAccount}>{newAccount ? \"Log in\" : \"Create Account\"}</span>\n\n        </>\n    )\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target: \n            {name} \n        } = event;\n        let provider;\n        if (name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\n        } else if (name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider()\n        }\n        await authService.signInWithPopup(provider)\n    }\n    return (\n        <div>\n            <AuthForm />\n            <div className=\"authSocial\">\n                <button onClick = {onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick = {onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n}\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner, userObj}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure to delete this nweet?\")\n        if (ok) {\n            //delete nweet doc reference\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\n        }\n    }\n    const toggleEditing = () => setEditing(prev => !prev)\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(nweetObj, newNweet)\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet\n        })\n        setEditing(false)\n    }\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewNweet(value)\n    }\n    return (\n        <div >\n            {\n                editing ?\n                    (<>\n                        {isOwner && <><form className=\"container\" onSubmit={onSubmit}>\n                            <input onChange={onChange}\n                                type=\"text\" placeholder=\"edit your nweet\"\n                                value={newNweet} required />\n                        <input type=\"submit\" value=\"Update Nweet\"/></form>\n                        <button onClick={toggleEditing}>Cancel</button></>}\n                    </>)\n                    :\n                    <div className=\"nweetField\">\n                        <h4 id=\"nweet\">{nweetObj.text}</h4>\n                        {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" alt=\"\"/>}\n                        {isOwner && (\n                            <div className=\"nweetBtn\">\n                                <button onClick={toggleEditing}>Edit Nweet</button>\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\n                            </div>)}\n                    </div>\n\n            }\n        </div>\n    );\n}\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\")\n    const [attachment, setAttachment] = useState(\"\")\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        let attachmentURL = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\")\n            attachmentURL = await response.ref.getDownloadURL()\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentURL,\n        }\n        await dbService.collection(\"nweets\").add(nweetObj)\n        setNweet(\"\")\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNweet(value)\n    }\n    const onFileChange = (event) => {\n        const { target: { files } } = event;\n        const theFile = files[0] // file 한개이니까 \n        //file reader API 사용해서 이 파일을 읽자\n        //onloadend event handler it occurs everytime reading finishes. \n        //finishedEvent target -> result file => URL converted result. \n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget: { result } } = finishedEvent;\n            setAttachment(result)\n        }\n        reader.readAsDataURL(theFile)\n    }\n    const onClearAttachmentClick = () => setAttachment(\"\");\n    return (\n        <div className=\"nweetfact\" id=\"nweetfact\">\n            <form onSubmit={onSubmit} >\n                <input\n                    id=\"nweetinput\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"WHAT'S ON YOUR MIND?\"\n                    maxLength={120} />\n                <input id=\"filesubmit\" type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                <input id=\"nweetsubmit\" type=\"submit\" value=\"Nweet\" />\n                {attachment &&\n                    <div><img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\n                        <button onClick={onClearAttachmentClick}>Clear Picture</button></div>}\n            </form>\n        </div>\n    )\n}\n\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    // useEffect()안에 바로 쓰는 게 아니라 따로 빼줘서 왜냐 async 해줘야하기 때문\n    // const getNweets = async () => {\n    //     const dbNweets = await dbService.collection(\"nweets\").get()\n    //     dbNweets.forEach(document => {\n    //         const nweetObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         }\n    //         setNweets(prev => [nweetObject, ...prev])\n    //     })\n    // } => 이건 onSnapshot 에 비해 old way.\n\n    useEffect(() => {\n        //onsnapshot => listener method. db changes realtime notice.\n        //read delete update anything \n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }))\n            setNweets(nweetArray)\n        })\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div className=\"nweetlist\">\n                {nweets.map((nweet) =>\n                    (<Nweet key={nweet.id} \n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                        userObj={userObj} />)\n                )}\n            </div>\n        </div>\n\n    )\n}\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n    <div className=\"navlist\">\n        <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">HOME</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">\n                    {userObj.photoURL && <img src={userObj.photoURL} width=\"30px\" heigh=\"30px\" alt=\"\" />}\n                     {userObj.displayName}'s PROFILE\n                </Link>\n\n            </li>\n        </ul>\n    </nav>\n    </div>)\nexport default Navigation","import React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ?\n                    <>\n                    <div>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                        </div>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </> :\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>}\n            </Switch>\n        </Router>\n    )\n}\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  // authService.currentUser -> currentUser : user? null => user state 알려줌\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          photoURL: user.photoURL,\n          updateProfile: (args) =>\n            user.updateProfile(args),\n        })\n      } else{\n        setIsLoggedIn(false);\n      }\n      setInit(true)\n    })\n  }, [])\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) =>\n        user.updateProfile(args),\n    })\n    // setUserObj(Object.assign({}, user));\n  }\n  return (\n    <>\n    {init? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}/> : \"Initiazliaing\"}    \n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}